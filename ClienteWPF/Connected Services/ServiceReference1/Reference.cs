//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClienteWPF.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Ficha", Namespace="http://schemas.datacontract.org/2004/07/ServicioWCF")]
    [System.SerializableAttribute()]
    public partial class Ficha : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Color {
            get {
                return this.ColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorField, value) != true)) {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Tablero", Namespace="http://schemas.datacontract.org/2004/07/ServicioWCF")]
    [System.SerializableAttribute()]
    public partial class Tablero : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ColumnasField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FilasField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClienteWPF.ServiceReference1.Ficha[][] MatrizField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Columnas {
            get {
                return this.ColumnasField;
            }
            set {
                if ((this.ColumnasField.Equals(value) != true)) {
                    this.ColumnasField = value;
                    this.RaisePropertyChanged("Columnas");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Filas {
            get {
                return this.FilasField;
            }
            set {
                if ((this.FilasField.Equals(value) != true)) {
                    this.FilasField = value;
                    this.RaisePropertyChanged("Filas");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClienteWPF.ServiceReference1.Ficha[][] Matriz {
            get {
                return this.MatrizField;
            }
            set {
                if ((object.ReferenceEquals(this.MatrizField, value) != true)) {
                    this.MatrizField = value;
                    this.RaisePropertyChanged("Matriz");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Jugador", Namespace="http://schemas.datacontract.org/2004/07/ServicioWCF")]
    [System.SerializableAttribute()]
    public partial class Jugador : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClienteWPF.ServiceReference1.Ficha FichaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClienteWPF.ServiceReference1.Ficha Ficha {
            get {
                return this.FichaField;
            }
            set {
                if ((object.ReferenceEquals(this.FichaField, value) != true)) {
                    this.FichaField = value;
                    this.RaisePropertyChanged("Ficha");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nombre {
            get {
                return this.NombreField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreField, value) != true)) {
                    this.NombreField = value;
                    this.RaisePropertyChanged("Nombre");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/IniciarTablero", ReplyAction="http://tempuri.org/IService1/IniciarTableroResponse")]
        ClienteWPF.ServiceReference1.Ficha[][] IniciarTablero(ClienteWPF.ServiceReference1.Ficha[][] matriz, ClienteWPF.ServiceReference1.Ficha fichaVacia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/IniciarTablero", ReplyAction="http://tempuri.org/IService1/IniciarTableroResponse")]
        System.Threading.Tasks.Task<ClienteWPF.ServiceReference1.Ficha[][]> IniciarTableroAsync(ClienteWPF.ServiceReference1.Ficha[][] matriz, ClienteWPF.ServiceReference1.Ficha fichaVacia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ProbarTablero", ReplyAction="http://tempuri.org/IService1/ProbarTableroResponse")]
        ClienteWPF.ServiceReference1.Tablero ProbarTablero(ClienteWPF.ServiceReference1.Tablero tablero);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ProbarTablero", ReplyAction="http://tempuri.org/IService1/ProbarTableroResponse")]
        System.Threading.Tasks.Task<ClienteWPF.ServiceReference1.Tablero> ProbarTableroAsync(ClienteWPF.ServiceReference1.Tablero tablero);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PiezasEnColumna", ReplyAction="http://tempuri.org/IService1/PiezasEnColumnaResponse")]
        int PiezasEnColumna(ClienteWPF.ServiceReference1.Ficha[][] tablero, int columna, ClienteWPF.ServiceReference1.Ficha fichaVacia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PiezasEnColumna", ReplyAction="http://tempuri.org/IService1/PiezasEnColumnaResponse")]
        System.Threading.Tasks.Task<int> PiezasEnColumnaAsync(ClienteWPF.ServiceReference1.Ficha[][] tablero, int columna, ClienteWPF.ServiceReference1.Ficha fichaVacia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/VerificarLugar", ReplyAction="http://tempuri.org/IService1/VerificarLugarResponse")]
        bool VerificarLugar(ClienteWPF.ServiceReference1.Ficha[][] tablero, int columna, ClienteWPF.ServiceReference1.Ficha fichaVacia, ClienteWPF.ServiceReference1.Jugador jugadorActual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/VerificarLugar", ReplyAction="http://tempuri.org/IService1/VerificarLugarResponse")]
        System.Threading.Tasks.Task<bool> VerificarLugarAsync(ClienteWPF.ServiceReference1.Ficha[][] tablero, int columna, ClienteWPF.ServiceReference1.Ficha fichaVacia, ClienteWPF.ServiceReference1.Jugador jugadorActual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Colocar", ReplyAction="http://tempuri.org/IService1/ColocarResponse")]
        ClienteWPF.ServiceReference1.Ficha[][] Colocar(ClienteWPF.ServiceReference1.Ficha[][] tablero, int columna, ClienteWPF.ServiceReference1.Ficha fichaVacia, ClienteWPF.ServiceReference1.Jugador jugadorActual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Colocar", ReplyAction="http://tempuri.org/IService1/ColocarResponse")]
        System.Threading.Tasks.Task<ClienteWPF.ServiceReference1.Ficha[][]> ColocarAsync(ClienteWPF.ServiceReference1.Ficha[][] tablero, int columna, ClienteWPF.ServiceReference1.Ficha fichaVacia, ClienteWPF.ServiceReference1.Jugador jugadorActual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CambiarTurnoJugador", ReplyAction="http://tempuri.org/IService1/CambiarTurnoJugadorResponse")]
        ClienteWPF.ServiceReference1.Jugador CambiarTurnoJugador(ClienteWPF.ServiceReference1.Jugador jugador1, ClienteWPF.ServiceReference1.Jugador jugador2, ClienteWPF.ServiceReference1.Jugador jugadorActual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CambiarTurnoJugador", ReplyAction="http://tempuri.org/IService1/CambiarTurnoJugadorResponse")]
        System.Threading.Tasks.Task<ClienteWPF.ServiceReference1.Jugador> CambiarTurnoJugadorAsync(ClienteWPF.ServiceReference1.Jugador jugador1, ClienteWPF.ServiceReference1.Jugador jugador2, ClienteWPF.ServiceReference1.Jugador jugadorActual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FinDeTurno", ReplyAction="http://tempuri.org/IService1/FinDeTurnoResponse")]
        string FinDeTurno(ClienteWPF.ServiceReference1.Ficha[][] tablero, ClienteWPF.ServiceReference1.Ficha fichaVacia, ClienteWPF.ServiceReference1.Jugador jugadorActual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FinDeTurno", ReplyAction="http://tempuri.org/IService1/FinDeTurnoResponse")]
        System.Threading.Tasks.Task<string> FinDeTurnoAsync(ClienteWPF.ServiceReference1.Ficha[][] tablero, ClienteWPF.ServiceReference1.Ficha fichaVacia, ClienteWPF.ServiceReference1.Jugador jugadorActual);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : ClienteWPF.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<ClienteWPF.ServiceReference1.IService1>, ClienteWPF.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ClienteWPF.ServiceReference1.Ficha[][] IniciarTablero(ClienteWPF.ServiceReference1.Ficha[][] matriz, ClienteWPF.ServiceReference1.Ficha fichaVacia) {
            return base.Channel.IniciarTablero(matriz, fichaVacia);
        }
        
        public System.Threading.Tasks.Task<ClienteWPF.ServiceReference1.Ficha[][]> IniciarTableroAsync(ClienteWPF.ServiceReference1.Ficha[][] matriz, ClienteWPF.ServiceReference1.Ficha fichaVacia) {
            return base.Channel.IniciarTableroAsync(matriz, fichaVacia);
        }
        
        public ClienteWPF.ServiceReference1.Tablero ProbarTablero(ClienteWPF.ServiceReference1.Tablero tablero) {
            return base.Channel.ProbarTablero(tablero);
        }
        
        public System.Threading.Tasks.Task<ClienteWPF.ServiceReference1.Tablero> ProbarTableroAsync(ClienteWPF.ServiceReference1.Tablero tablero) {
            return base.Channel.ProbarTableroAsync(tablero);
        }
        
        public int PiezasEnColumna(ClienteWPF.ServiceReference1.Ficha[][] tablero, int columna, ClienteWPF.ServiceReference1.Ficha fichaVacia) {
            return base.Channel.PiezasEnColumna(tablero, columna, fichaVacia);
        }
        
        public System.Threading.Tasks.Task<int> PiezasEnColumnaAsync(ClienteWPF.ServiceReference1.Ficha[][] tablero, int columna, ClienteWPF.ServiceReference1.Ficha fichaVacia) {
            return base.Channel.PiezasEnColumnaAsync(tablero, columna, fichaVacia);
        }
        
        public bool VerificarLugar(ClienteWPF.ServiceReference1.Ficha[][] tablero, int columna, ClienteWPF.ServiceReference1.Ficha fichaVacia, ClienteWPF.ServiceReference1.Jugador jugadorActual) {
            return base.Channel.VerificarLugar(tablero, columna, fichaVacia, jugadorActual);
        }
        
        public System.Threading.Tasks.Task<bool> VerificarLugarAsync(ClienteWPF.ServiceReference1.Ficha[][] tablero, int columna, ClienteWPF.ServiceReference1.Ficha fichaVacia, ClienteWPF.ServiceReference1.Jugador jugadorActual) {
            return base.Channel.VerificarLugarAsync(tablero, columna, fichaVacia, jugadorActual);
        }
        
        public ClienteWPF.ServiceReference1.Ficha[][] Colocar(ClienteWPF.ServiceReference1.Ficha[][] tablero, int columna, ClienteWPF.ServiceReference1.Ficha fichaVacia, ClienteWPF.ServiceReference1.Jugador jugadorActual) {
            return base.Channel.Colocar(tablero, columna, fichaVacia, jugadorActual);
        }
        
        public System.Threading.Tasks.Task<ClienteWPF.ServiceReference1.Ficha[][]> ColocarAsync(ClienteWPF.ServiceReference1.Ficha[][] tablero, int columna, ClienteWPF.ServiceReference1.Ficha fichaVacia, ClienteWPF.ServiceReference1.Jugador jugadorActual) {
            return base.Channel.ColocarAsync(tablero, columna, fichaVacia, jugadorActual);
        }
        
        public ClienteWPF.ServiceReference1.Jugador CambiarTurnoJugador(ClienteWPF.ServiceReference1.Jugador jugador1, ClienteWPF.ServiceReference1.Jugador jugador2, ClienteWPF.ServiceReference1.Jugador jugadorActual) {
            return base.Channel.CambiarTurnoJugador(jugador1, jugador2, jugadorActual);
        }
        
        public System.Threading.Tasks.Task<ClienteWPF.ServiceReference1.Jugador> CambiarTurnoJugadorAsync(ClienteWPF.ServiceReference1.Jugador jugador1, ClienteWPF.ServiceReference1.Jugador jugador2, ClienteWPF.ServiceReference1.Jugador jugadorActual) {
            return base.Channel.CambiarTurnoJugadorAsync(jugador1, jugador2, jugadorActual);
        }
        
        public string FinDeTurno(ClienteWPF.ServiceReference1.Ficha[][] tablero, ClienteWPF.ServiceReference1.Ficha fichaVacia, ClienteWPF.ServiceReference1.Jugador jugadorActual) {
            return base.Channel.FinDeTurno(tablero, fichaVacia, jugadorActual);
        }
        
        public System.Threading.Tasks.Task<string> FinDeTurnoAsync(ClienteWPF.ServiceReference1.Ficha[][] tablero, ClienteWPF.ServiceReference1.Ficha fichaVacia, ClienteWPF.ServiceReference1.Jugador jugadorActual) {
            return base.Channel.FinDeTurnoAsync(tablero, fichaVacia, jugadorActual);
        }
    }
}
